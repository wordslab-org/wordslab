// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wordslab.manager.storage;

#nullable disable

namespace wordslab.manager.Migrations
{
    [DbContext(typeof(ConfigStore))]
    partial class ConfigStoreModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("wordslab.manager.config.HostMachineConfig", b =>
                {
                    b.Property<string>("HostName")
                        .HasColumnType("TEXT");

                    b.Property<string>("BackupPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BackupSizeGB")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanExposeHttpOnLAN")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanExposeHttpsOnLAN")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanUseGPUs")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTimeUpdated")
                        .HasColumnType("TEXT");

                    b.Property<int>("HttpPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HttpsPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KubernetesPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemoryGB")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Processors")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SSHPort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VirtualMachineClusterPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VirtualMachineClusterSizeGB")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VirtualMachineDataPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VirtualMachineDataSizeGB")
                        .HasColumnType("INTEGER");

                    b.HasKey("HostName");

                    b.ToTable("HostMachine", (string)null);
                });

            modelBuilder.Entity("wordslab.manager.config.VirtualMachineConfig", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AllowHttpAccessFromLAN")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AllowHttpsAccessFromLAN")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ForwardHttpIngressPortOnLocalhost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ForwardHttpsIngressPortOnLocalhost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ForwardKubernetesPortOnLocalhost")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ForwardSSHPortOnLocalhost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostHttpIngressPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostHttpsIngressPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostKubernetesPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostSSHPort")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPreemptible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VmModelName")
                        .HasColumnType("TEXT");

                    b.Property<int>("VmProvider")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("VirtualMachine", (string)null);
                });

            modelBuilder.Entity("wordslab.manager.config.VirtualMachineInstance", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTimeUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExecutionMessages")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kubeconfig")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartArgumentsMessages")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StopTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("VmIPAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("VmProcessId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name", "DateTimeCreated");

                    b.ToTable("VMInstance", (string)null);
                });

            modelBuilder.Entity("wordslab.manager.config.VirtualMachineConfig", b =>
                {
                    b.OwnsOne("wordslab.manager.config.VirtualMachineSpec", "Spec", b1 =>
                        {
                            b1.Property<string>("VirtualMachineConfigName")
                                .HasColumnType("TEXT");

                            b1.HasKey("VirtualMachineConfigName");

                            b1.ToTable("VirtualMachine");

                            b1.WithOwner()
                                .HasForeignKey("VirtualMachineConfigName");

                            b1.OwnsOne("wordslab.manager.config.NetworkSpec", "Network", b2 =>
                                {
                                    b2.Property<string>("VirtualMachineSpecVirtualMachineConfigName")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("HttpIngressPort")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("HttpsIngressPort")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("KubernetesPort")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("SSHPort")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("VirtualMachineSpecVirtualMachineConfigName");

                                    b2.ToTable("VirtualMachine");

                                    b2.WithOwner()
                                        .HasForeignKey("VirtualMachineSpecVirtualMachineConfigName");
                                });

                            b1.OwnsOne("wordslab.manager.config.StorageSpec", "Storage", b2 =>
                                {
                                    b2.Property<string>("VirtualMachineSpecVirtualMachineConfigName")
                                        .HasColumnType("TEXT");

                                    b2.Property<bool>("ClusterDiskIsSSD")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("ClusterDiskSizeGB")
                                        .HasColumnType("INTEGER");

                                    b2.Property<bool>("DataDiskIsSSD")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("DataDiskSizeGB")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("VirtualMachineSpecVirtualMachineConfigName");

                                    b2.ToTable("VirtualMachine");

                                    b2.WithOwner()
                                        .HasForeignKey("VirtualMachineSpecVirtualMachineConfigName");
                                });

                            b1.OwnsOne("wordslab.manager.config.ComputeSpec", "Compute", b2 =>
                                {
                                    b2.Property<string>("VirtualMachineSpecVirtualMachineConfigName")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("MemoryGB")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Processors")
                                        .HasColumnType("INTEGER");

                                    b2.HasKey("VirtualMachineSpecVirtualMachineConfigName");

                                    b2.ToTable("VirtualMachine");

                                    b2.WithOwner()
                                        .HasForeignKey("VirtualMachineSpecVirtualMachineConfigName");
                                });

                            b1.OwnsOne("wordslab.manager.config.GPUSpec", "GPU", b2 =>
                                {
                                    b2.Property<string>("VirtualMachineSpecVirtualMachineConfigName")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("GPUCount")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("MemoryGB")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("ModelName")
                                        .HasColumnType("TEXT");

                                    b2.HasKey("VirtualMachineSpecVirtualMachineConfigName");

                                    b2.ToTable("VirtualMachine");

                                    b2.WithOwner()
                                        .HasForeignKey("VirtualMachineSpecVirtualMachineConfigName");
                                });

                            b1.Navigation("Compute")
                                .IsRequired();

                            b1.Navigation("GPU")
                                .IsRequired();

                            b1.Navigation("Network")
                                .IsRequired();

                            b1.Navigation("Storage")
                                .IsRequired();
                        });

                    b.Navigation("Spec")
                        .IsRequired();
                });

            modelBuilder.Entity("wordslab.manager.config.VirtualMachineInstance", b =>
                {
                    b.HasOne("wordslab.manager.config.VirtualMachineConfig", "Config")
                        .WithMany()
                        .HasForeignKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("wordslab.manager.config.ComputeSpec", "ComputeStartArguments", b1 =>
                        {
                            b1.Property<string>("VirtualMachineInstanceName")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("VirtualMachineInstanceDateTimeCreated")
                                .HasColumnType("TEXT");

                            b1.Property<int>("MemoryGB")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Processors")
                                .HasColumnType("INTEGER");

                            b1.HasKey("VirtualMachineInstanceName", "VirtualMachineInstanceDateTimeCreated");

                            b1.ToTable("VMInstance");

                            b1.WithOwner()
                                .HasForeignKey("VirtualMachineInstanceName", "VirtualMachineInstanceDateTimeCreated");
                        });

                    b.OwnsOne("wordslab.manager.config.GPUSpec", "GPUStartArguments", b1 =>
                        {
                            b1.Property<string>("VirtualMachineInstanceName")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("VirtualMachineInstanceDateTimeCreated")
                                .HasColumnType("TEXT");

                            b1.Property<int>("GPUCount")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("MemoryGB")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("ModelName")
                                .HasColumnType("TEXT");

                            b1.HasKey("VirtualMachineInstanceName", "VirtualMachineInstanceDateTimeCreated");

                            b1.ToTable("VMInstance");

                            b1.WithOwner()
                                .HasForeignKey("VirtualMachineInstanceName", "VirtualMachineInstanceDateTimeCreated");
                        });

                    b.Navigation("ComputeStartArguments");

                    b.Navigation("Config");

                    b.Navigation("GPUStartArguments");
                });
#pragma warning restore 612, 618
        }
    }
}
